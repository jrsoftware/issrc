<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>Inno Setup 6 Revision History</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<style type="text/css">
    body         { font: small verdana, arial, sans-serif; color: black; background-color: white }
    a:link       { color: #264b99; background-color: white }
    a:active     { color: #7799dd; background-color: white }
    a:visited    { color: #5e85d7; background-color: white }
    tt           { font: small "courier new", monospace }
    li           { margin-top: 0.15em; margin-bottom: 0.15em }
    div.bluehead { text-align: center; color: white; background-color: #264b99; padding: 5px; font-weight: bold }
    .date        { font-size: x-small; font-weight: bold }
    .head1       { font-size: xx-large }
    .head2       { font-size: large }
    .ver         { font-size: large; font-weight: bold }
</style>
</head>
<body>

<div class="bluehead"><span class="head1">Inno Setup 6</span><br /><span class="head2">Revision History</span></div>

<p>Copyright &copy; 1997-2024 <a href="https://jrsoftware.org/">Jordan Russell</a>. All rights reserved.<br />
Portions Copyright &copy; 2000-2024 Martijn Laan. All rights reserved.<br />
For conditions of distribution and use, see <a href="https://jrsoftware.org/files/is/license.txt">LICENSE.TXT</a>.
</p>

<p><b>Want to be notified by e-mail of new Inno Setup releases?</b> <a href="https://jrsoftware.org/ismail.php">Subscribe</a> to the Inno Setup Mailing List!</p>

<p><a name="6.3.0"></a><span class="ver">6.3.0-dev </span><span class="date">(?)</span></p>
<p><span class="head2">Support for UTF-8 encoded files improved</span></p>
<ul>
  <li>Added support for UTF-8 encoded files without a BOM for .iss script files, .isl messages files, <tt>LicenseFile</tt>, <tt>InfoBeforeFile</tt>,  <tt>InfoAfterFile</tt>, and ISPP's <tt>#file</tt>.</li>
  <li>Compiler IDE changes:
  <ul>
  <li>New script files are now saved as UTF-8 without a BOM by default, bringing the IDE into line with most other text editors. Existing files are still saved as they were until the save encoding is changed manually using the <i>Save Encoding</i> submenu of the <i>File</i> menu.</li>
  <li>Added new <i>UTF-8 with BOM</i> menu item to the <i>Save Encoding</i> submenu of the <i>File</i> menu to save new files with a BOM anyway.</li>
  </ul>
  </li>
  <li>Pascal Scripting changes:
  <ul>
    <li>Support function <tt>LoadStringsFromFile</tt> now also supports UTF-8 encoded files without a BOM.</li>
    <li>Added new <tt>SaveStringsToUTF8FileWithoutBOM</tt> support function.</li>
  </ul>
  </li>
</ul>
<p><span class="head2">Support for processor architectures improved</span></p>
<ul>
  <li>Setup can now detect support for x64 emulation when running on Windows 11 for Arm, and can be instructed to select 64-bit install mode in that case which was not possible before. See the first example below.<br/><br/></li>
  <li>[Setup] section directives <tt>ArchitecturesInstallIn64BitMode</tt> and <tt>ArchitecturesAllowed</tt> now both support boolean expressions. Additionally, extra platform identifiers were added. This enables for example:
      <pre>; Select 64-bit install mode on any x64-compatible OS (x64 + Win11 Arm64):
ArchitecturesInstallIn64BitMode=x64compatible

; Only allow installation on systems that aren't x64-compatible.
; Useful in a situation where you have separate x86 & x64 installers,
; and don't want users of x64-compatible OSes (x64 + Win11 Arm64)
; erroneously running the x86 installer which would say:
ArchitecturesAllowed=not x64compatible

; Require two arch matches at the same time:
; If an Arm installer installs both Arm64 and Arm32 binaries,
; you technically should ensure that the OS actually supports both:
ArchitecturesAllowed=arm64 and arm32compatible

; Same goes for an x64-compatible installer shipping some 32-bit
; binaries:
ArchitecturesAllowed=x64compatible and x86compatible

; Installing a component that cannot operate in an emulated
; environment, such as an x64 device driver:
ArchitecturesAllowed=x64os

; Allow installation on x64-compatible systems, but deny one of them:
; (Imagine if in the future there were 3 x64-compatible OSes!)
ArchitecturesAllowed=x64compatible and not arm64

; Never select 64-bit install mode but require a 64-bit OS anyway
; (for example, because you're accessing HKLM64):
ArchitecturesInstallIn64BitMode=
ArchitecturesAllowed=win64</pre>
      The full list of new platform identifiers is: <tt>arm32compatible</tt>, <tt>x64compatible</tt>, <tt>x64os</tt>, <tt>x86compatible</tt>, <tt>x86os</tt>, and <tt>win64</tt>. See the new "Architecture Identifiers" help topic for more details.<br/><br/>
      All of the above is backward compatible so no changes are needed for your existing scripts. For example, this works unchanged (but see the updated <i>64BitThreeArch.iss</i> example script for the preferred setting):
      <pre>ArchitecturesInstallIn64BitMode=x64 arm64</pre>
      Do note that the <tt>x64</tt> identifier is now deprecated and the compiler will issue a warning if you use it anyway. It will substitute <tt>x64os</tt>, but <tt>x64compatible</tt> is preferred in most cases and it's simple to adopt it: just replace <tt>x64</tt> with <tt>x64compatible</tt>, and any <tt>IsX64</tt> with <tt>IsX64Compatible</tt>.<br/><br/>
      The 64-bit example scripts like <i>64Bit.iss</i> have all been updated to use <tt>x64compatible</tt> as preferred.<br/><br/>
  </li>
  <li>In 64-bit install mode [Files] section flag <tt>regtypelib</tt> now registers type libraries inside a 64-bit process on Windows 11 for Arm as well.</li>
  <li>[Registry] section parameter <tt>Permissions</tt> is now effectual on 64-bit registry keys on Windows 11 for Arm as well.</p>
  <li>Setup now logs the machine types supported by the system. For example, when running on Windows 11 for Arm it now logs: "Machine types supported by system: x86 x64 arm32 arm64".</li>
  <li>Message OnlyOnTheseArchitectures is not used anymore. Instead existing message WindowsVersionNotSupported is now shown when Setup is started on an architecture which is not allowed by the <tt>ArchitecturesAllowed</tt> expression. (But please do not remove the message from translation files.)<br/><br/></li>
  <li>Pascal Scripting change: Added new <tt>IsArm32Compatible</tt>, <tt>IsX64Compatible</tt>, <tt>IsX64OS</tt>, <tt>IsX86Compatible</tt>, and <tt>IsX86OS</tt> support functions. The <tt>IsX64</tt> support function still exists but is now deprecated as explained above. Example testing all platform identifiers:
      <pre>[Code]
function InitializeSetup: Boolean;
begin
  if IsArm32Compatible then Log('IsArm32Compatible');
  if IsArm64 then Log('IsArm64');
  if IsX64OS then Log('IsX64OS');
  if IsX64Compatible then Log('IsX64Compatible');
  if IsX86 then Log('IsX86');
  if IsX86OS then Log('IsX86OS');
  if IsX86Compatible then Log('IsX86Compatible');
  if IsWin64 then Log('IsWin64');
  Result := True;
end;</pre>
  </li>
</ul>
<p><span class="head2">Support for #include files improved</span></p>
<ul>
  <li>The Compiler IDE now opens up to 20 #include files in tabs, instead of up to 10.</li>
  <li>Tabs for opened #include files can now be closed: Added new <i>Close Tab (Ctrl+F4)</i>, <i>Reopen Tab</i>, and  <i>Reopen All Tabs</i> menu items to the <i>View</i> menu, also available by right clicking the tab bar.</li>
  <li>The selected and mouseover #include file tabs now show close buttons.</li>
  <li>Added a clickable panel to the Status Bar showing the amount of closed tabs if there are any.</li>
  <li>Removed flicker (especially visible in dark mode) when switching tabs.</li>
</ul>
<p><span class="head2">Support for Windows Vista, Windows Server 2008 and the Itanium processor architecture removed</span></p>
<ul>
  <li><b>OS requirements change:</b> Windows Vista and Windows Server 2008 are no longer supported. Windows 7 and Windows Server 2008 R2 are now the minimum supported operating systems. [Setup] section directive <tt>MinVersion</tt> still defaults to <tt>6.1sp1</tt>, so by default Setup will still not run versions of Windows 7 and Windows Server 2008 R2 which have not been updated.</li>
  <li>The Itanium processor architecture is no longer supported. The <tt>ia64</tt> platform identifier has been removed and instead Setup will always display an error message and exit if it's started on an Itanium system anyway.</li>
  <li>Removed [Icons] section flag <tt>foldershortcut</tt> which was already ignored except when running on Windows Vista or Windows Server 2008, as folder shortcuts do not expand properly on the Start Menu anymore.</li>
</ul>
<p><span class="head2">Other changes</span></p>
<ul>
  <li>Compiler IDE changes: 
  <ul>
    <li>The New Script Wizard now offers an option to import a Windows registry .reg file.</li>
    <li>The New Script Wizard now automatically sets <tt>ArchitecturesInstallIn64BitMode</tt> and <tt>ArchitecturesAllowed</tt> to <tt>x64compatible</tt> if it detects that the chosen main executable file is 64-bit. The default main executable file is now the 64-bit MyProg-x64.exe example executable instead of 32-bit MyProg.exe.</li>
    <li>Added new <i>Generate [Registry] Entries... (Ctrl+Shift+R)</i> menu item to the <i>Tools</i> menu to import a Windows registry .reg file as extra entries to the [Registry] section at the cursor position, or to a new section.</li>
    <li>Added new <i>Generate [Files] Entries... (Ctrl+Shift+I)</i> menu item to the <i>Tools</i> menu to design and insert extra entries to the [Files] section at the cursor position, or to a new section.</li>
    <li>The <i>Generate MsgBox/TaskDialogMsgBox Call... (Ctrl+Shift+M)</i> tool (previously named <i>MsgBox/TaskDialogMsgBox Designer</i>) now respects the tab width and tab character settings, indents the generated Pascal script one extra level, and warns if the cursor position is not in the [Code] section.</li>
    <li>Added icons to the main menu items.</i>
  </ul>
  </li>
  <li>Added new [Setup] section directive <tt>UninstallLogging</tt>, which defaults to <tt>no</tt>. If set to <tt>yes</tt>, the uninstaller will always create a log file if it is launched from the <i>Add/Remove Programs</i> Control Panel applet. Equivalent to passing /LOG on the command line.</li>
  <li>During startup Setup would always ask Windows to create any missing <tt>{usercf}</tt>, <tt>{userpf}</tt>, and <tt>{usersavedgames}</tt> folders. It no longer does until the script asks for the folder. Note that scripts running in administrative install mode should not do this because it violates the <a href="https://jrsoftware.org/ishelp/index.php?topic=setup_useduserareaswarning">used user areas warning</a>.</li>
  <li>Added support for IIS group users identifiers (<tt>iisiusrs</tt>) for use in <tt>Permissions</tt> parameters.</li> 
  <li>Pascal Scripting change: Type <tt>TShellFolderID</tt> was removed because it wasn't used by any support function.</li>
  <li>Added modern icons to the MyProg example executables, now compiled with Visual Studio 2022.</li>
  <li>Added official Korean translation.</li>
  <li>Inno Setup is now built using Delphi 11.3 Alexandria instead of Delphi 10.3 Rio.</li>
  <li>Inno Setup's Delphi projects have been recreated as new clean projects and have been added to a <i>Projects\Projects.groupproj</i> project group. This makes it a lot easier to get started with working with the Inno Setup source code and making contributions, even with the free Delphi Community Edition.</li>
  <li>Minor tweaks and documentation improvements.</li>
</ul>

<p>Contributions via <a href="https://github.com/jrsoftware/issrc" target="_blank">GitHub</a>: Thanks to Achim Stuy, ser163, Jens Geyer, and Sergii Leonov for their contributions.</p>

<p><a href="https://jrsoftware.org/files/is6.2-whatsnew.htm">Inno Setup 6.2 Revision History</a></p >

</body>
</html>

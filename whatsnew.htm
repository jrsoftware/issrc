<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8" />
<title>Inno Setup 6 Revision History</title>
<base href="https://jrsoftware.org/" />
<style type="text/css">
    body         { font: calc(14rem/16)/1.5 "Segoe UI", sans-serif; color: #282828; background-color: white }
    a:link       { color: #264b99; background-color: transparent }
    a:visited    { color: #5e85d7; background-color: transparent }
    a:active     { color: #7799dd; background-color: transparent }
    tt, pre      { font: calc(13rem/16)/calc(21rem/16) monospace; color: inherit; background-color: #f0f0f0; padding: 2px 4px; border-radius: 4px }
    pre          { line-height: normal; padding: 10px; border-radius: 6px }
    li, div.limargins { margin-top: 5px; margin-bottom: 5px }
    div.bluehead { text-align: center; color: white; background-color: #264b99; padding: 5px; font-weight: bold; line-height: normal }
    .date        { font-size: calc(11rem/16); font-weight: bold }
    .head1       { font-size: calc(32rem/16) }
    .head2       { font-size: calc(20rem/16) }
    .ver         { font-size: calc(20rem/16); font-weight: bold }
</style>
</head>
<body>

<div class="bluehead"><span class="head1">Inno Setup 6</span><br /><span class="head2">Revision History</span></div>

<p>Copyright © 1997-2024 <a href="./">Jordan Russell</a>. All rights reserved.<br />
Portions Copyright © 2000-2024 Martijn Laan. All rights reserved.<br />
For conditions of distribution and use, see <a href="files/is/license.txt">LICENSE.TXT</a>.
</p>

<p><b>Want to be notified by e-mail of new Inno Setup releases?</b> <a href="ismail.php">Subscribe</a> to the Inno Setup Mailing List!</p>

<p><a name="6.3.0"></a><span class="ver">6.3.0-dev </span><span class="date">(?)</span></p>
<p><span class="head2">Support for UTF-8 encoded files improved</span></p>
<ul>
  <li>Added support for UTF-8 encoded files without a BOM for .iss script files, .isl messages files, <tt>LicenseFile</tt>, <tt>InfoBeforeFile</tt>,  <tt>InfoAfterFile</tt>, and ISPP's <tt>#file</tt>.</li>
  <li>Compiler IDE changes:
  <ul>
  <li>New script files are now saved as UTF-8 without a BOM by default, bringing the IDE into line with most other text editors. Existing files are still saved as they were until the save encoding is changed manually using the <i>Save Encoding</i> submenu of the <i>File</i> menu.</li>
  <li>Added new <i>UTF-8 with BOM</i> menu item to the <i>Save Encoding</i> submenu of the <i>File</i> menu to save new files with a BOM anyway.</li>
  </ul>
  </li>
  <li>Pascal Scripting changes:
  <ul>
    <li>Support function <tt>LoadStringsFromFile</tt> now also supports UTF-8 encoded files without a BOM.</li>
    <li>Added new <tt>SaveStringsToUTF8FileWithoutBOM</tt> support function.</li>
  </ul>
  </li>
  <li>ISPP change: preprocessor output saved by <tt>SaveToFile</tt> is now always saved as UTF-8 without a BOM.</li>
</ul>
<p><span class="head2">Support for Arm64 systems improved, and related enhancements</span></p>
<ul>
  <li>Setup now officially supports the installation of x64 apps on Arm64 Windows 11 systems, which are able to run x64 binaries via emulation. To enable your x64 app installers to run properly on Arm64 Windows 11, some minor changes may be needed in your scripts. Most importantly:
  <ol>
    <li>In <tt>ArchitecturesAllowed</tt> and <tt>ArchitecturesInstallIn64BitMode</tt>, change any use of <tt>x64</tt> to <tt>x64compatible</tt>.</li>
    <li>In <tt>Check</tt> parameters and <tt>[Code]</tt>, change any use of <tt>IsX64</tt> to <tt>IsX64Compatible</tt>.</li>
    <li>In <tt>[Code]</tt>, if there are any <tt>ProcessorArchitecture = paX64</tt> comparisons, replace them with calls to <tt>IsX64Compatible</tt>.</li>
  </ol>
  <div class="limargins">The key difference between <tt>x64</tt>/<tt>IsX64</tt> and the new <tt>x64compatible</tt>/<tt>IsX64Compatible</tt> is that the latter matches both x64 Windows and Arm64 Windows 11.</div>
  In most cases, <b>you should make the above changes</b>, because otherwise, users on Arm64 systems may not be able to run your installers. For example, an <tt>ArchitecturesAllowed=x64</tt> setting will only allow the installer to run on x64 Windows &mdash; not on Arm64 Windows 11. Or, if you ship x86 and x64 versions of your app in the same installer, the 32-bit x86 version may be chosen instead of the expected x64 version when running on Arm64 Windows 11.</li>
  <li>The <tt>[Setup]</tt> section directives <tt>ArchitecturesAllowed</tt> and <tt>ArchitecturesInstallIn64BitMode</tt> have been enhanced:
  <ul>
    <li>Six new architecture identifiers have been introduced. Briefly:
    <ul>
      <li><tt>arm32compatible</tt> matches systems capable of running 32-bit Arm binaries.</li>
      <li><tt>x64compatible</tt> matches systems capable of running x64 binaries.</li>
      <li><tt>x64os</tt> matches systems running x64 Windows only. (Equivalent to the existing <tt>x64</tt> identifier, which is now deprecated.)</li>
      <li><tt>x86compatible</tt> matches systems capable of running 32-bit x86 binaries.</li>
      <li><tt>x86os</tt> matches systems running 32-bit x86 Windows only. (Equivalent to the existing <tt>x86</tt> identifier.)</li>
      <li><tt>win64</tt> matches systems running 64-bit Windows, regardless of architecture.</li>
    </ul>
    See the new <i>Architecture Identifiers</i> <a href="ishelp/index.php?topic=archidentifiers">help topic</a> for further details on each.</li>
    <li>Boolean expressions are now supported. Through use of the <tt>and</tt> operator, for example, it is possible to require two architecture identifiers to match at the same time. See the <tt>ArchitecturesAllowed</tt> <a href="ishelp/index.php?topic=setup_architecturesallowed">help topic</a> for usage examples.</li>
  </ul>
  </li>
  <li>The <tt>x64</tt> architecture identifier is now deprecated. If it is used, the compiler will issue a warning and substitute <tt>x64os</tt>, which has the same effect. But as mentioned above, in most cases, <b>scripts should be changed</b> to use <tt>x64compatible</tt> because it matches both x64 Windows and Arm64 Windows 11.</li>
  <li>The 64-bit example scripts (<tt>64Bit*.iss</tt>) have all been updated to use <tt>x64compatible</tt> as preferred.</li>
  <li>Certain 64-bit functionality that previously only worked on x64 Windows now works on Arm64 Windows 11 as well. This includes:
  <ul>
    <li>The <tt>Permissions</tt> parameter of the <tt>[Dirs]</tt> section when running in 64-bit install mode.</li>
    <li>The <tt>Permissions</tt> parameter of the <tt>[Files]</tt> section when running in 64-bit install mode or when the <tt>64bit</tt> flag is used.</li>
    <li>The <tt>Permissions</tt> parameter of the <tt>[Registry]</tt> section when running in 64-bit install mode or when the value of the <tt>Root</tt> parameter ends in <tt>64</tt>.</li>
    <li>The <tt>regtypelib</tt> flag of the <tt>[Files]</tt> section when running in 64-bit install mode or when the <tt>64bit</tt> flag is used.</li>
  </ul>
  Note that all of the above remains unsupported on Arm64 Windows 10.
  </li>
  <li>Setup now logs the machine types supported by the system &mdash; that is, what types of EXEs can be executed, either natively or via emulation. For example, when running on an Arm64 Windows 11 system, it logs: <tt>Machine types supported by system: x86 x64 Arm32 Arm64</tt>.</li>
  <li>The <tt>OnlyOnTheseArchitectures</tt> message is not used anymore. Instead, the <tt>WindowsVersionNotSupported</tt> message is now shown when Setup is started on an architecture that is not allowed by the <tt>ArchitecturesAllowed</tt> expression. (But please do not remove the message from translation files.)</li>
  <li>Pascal Scripting change: Added new <tt>IsArm32Compatible</tt>, <tt>IsX64Compatible</tt>, <tt>IsX64OS</tt>, <tt>IsX86Compatible</tt>, and <tt>IsX86OS</tt> support functions. The <tt>IsX64</tt> support function still exists but is now deprecated as explained above. Example testing all architecture identifiers:
      <pre>[Code]
function InitializeSetup: Boolean;
begin
  if IsArm32Compatible then Log('IsArm32Compatible');
  if IsArm64 then Log('IsArm64');
  if IsX64OS then Log('IsX64OS');
  if IsX64Compatible then Log('IsX64Compatible');
  if IsX86 then Log('IsX86');
  if IsX86OS then Log('IsX86OS');
  if IsX86Compatible then Log('IsX86Compatible');
  if IsWin64 then Log('IsWin64');
  Result := True;
end;</pre>
  </li>
</ul>
<p><span class="head2">Support for #include files improved</span></p>
<ul>
  <li>The Compiler IDE now opens up to 20 #include files in tabs, instead of up to 10.</li>
  <li>Tabs for opened #include files can now be closed: Added new <i>Close Tab</i> (Ctrl+F4), <i>Reopen Tab</i>, and  <i>Reopen All Tabs</i> menu items to the <i>View</i> menu, also available by right clicking the tab bar.<br />Because of this the shortcut for the <i>Evaluate Constant</i> menu item in the <i>Run</i> menu has been changed from Ctrl+F4 to Ctrl+F7.</li>
  <li>The selected and mouseover #include file tabs now show close buttons.</li>
  <li>Added a clickable panel to the Status Bar showing the amount of closed tabs if there are any.</li>
  <li>Removed flicker (especially visible in dark mode) when switching tabs.</li>
</ul>
<p><span class="head2">Support for Windows Vista, Windows Server 2008, and the Itanium architecture removed</span></p>
<ul>
  <li><b>OS requirements change:</b> Windows Vista and Windows Server 2008 are no longer supported. Windows 7 and Windows Server 2008 R2 are now the minimum supported operating systems. <tt>[Setup]</tt> section directive <tt>MinVersion</tt> still defaults to <tt>6.1sp1</tt>, so by default Setup will still not run versions of Windows 7 and Windows Server 2008 R2 which have not been updated.</li>
  <li>The defunct Itanium architecture is no longer supported. The <tt>ia64</tt> architecture identifier has been removed, and Setup will display the <tt>WindowsVersionNotSupported</tt> error message if it's started on an Itanium system.</li>
  <li>Removed <tt>[Icons]</tt> section flag <tt>foldershortcut</tt> which was already ignored except when running on Windows Vista or Windows Server 2008, as folder shortcuts do not expand properly on the Start Menu anymore.</li>
</ul>
<p><span class="head2">Compiler IDE changes</span></p>
<ul>
  <li>Added toolbar buttons and shortcuts to navigate back (Alt+Left) and forward (Alt+Right). Navigating by pressing the mouse X buttons is also supported. A navigation item is added when changing tabs or moving at least 11 lines at once, similar to Visual Studio 2022.<br />Because of this Alt+Right can no longer be used to initiate auto complete, instead the existing Ctrl+Space or new Ctrl+I alternative must be used. To still be able to also use Alt+Right for this activate Visual Studio-style shortcuts, see below.</li>
  <li>Added support for Visual Studio-style shortcuts (like Ctrl+- to navigate back, Ctrl+B to compile and F5 to run) to the <i>Build</i> and <i>Run</i> menus. To activate this use the <i>Options</i> menu item in the <i>Tools</i> menu to set the new <i>Key Map</i> option to <i>Visual Studio</i>.</li>
  <li>Added multiple selection support (Ctrl+Click or Ctrl+Drag). Typing, backspace, delete, undo, redo, copy, and paste all work with multiple selections added this way or via the pre-existing support for performing rectangular block selection (Alt+Shift+Arrow or Alt+Drag).</li>
  <li>Added a shortcut to revert multiple selections into a single one or a single selection into an empty one (Esc).</li>
  <li>Added dark mode support to the title bar on Windows 10 Version 2004 and later.</i>
  <li>Added dark mode support to the main menu bar on all versions of Windows.</i>
  <li>Added dark mode support to the menus on Windows 10 Version 1903 and later up to Windows 11 Version 23H2 which is currently the latest version of Windows 11.</i>
  <li>Updated the icons used by the editor's gutter, including the automatic use of higher quality versions in a widened gutter on higher DPI settings.</i>
  <li>Lines with a breakpoint are now displayed as normal lines with syntax highlighting, instead of as white text on a red background. The editor's gutter still displays an icon on such lines.</li>
  <li>Breakpoints are now preserved on a per-file basis between sessions.</li>
  <li>Added new <i>Delete All Breakpoints</i> (Shift+Ctrl+F5) menu item to the <i>Run</i> menu.</li>
  <li>Added icons to the menus.</li>
  <li>Added new <i>Highlight occurrences of current selection</i> and <i>Highlight occurrences of current word</i> options. The first is enabled by default and the second is disabled by default.</li>
  <li>The <i>Allow cursor to move beyond end of lines</i> option ("virtual space") is now disabled by default, consistent with most other editors.</li>
  <li>When the <i>Allow cursor to move beyond end of lines</i> option is enabled, pressing the left arrow key while the cursor is at the start of a line no longer moves the cursor to the end of the previous line unless the Ctrl key is also pressed, just like in Notepad++, Visual Studio, and RAD Studio.</li>
  <li>The New Script Wizard now offers an option to import a Windows registry .reg file.</li>
  <li>The New Script Wizard now automatically sets <tt>ArchitecturesInstallIn64BitMode</tt> and <tt>ArchitecturesAllowed</tt> to <tt>x64compatible</tt> if it detects that the chosen main executable file is 64-bit. The default main executable file is now the 64-bit MyProg-x64.exe example executable instead of 32-bit MyProg.exe.</li>
  <li>Added new <i>Generate [Registry] Entries</i> (Shift+Ctrl+R) menu item to the <i>Tools</i> menu to import a Windows registry .reg file as extra entries to the <tt>[Registry]</tt> section at the cursor position, or to a new section.</li>
  <li>Added new <i>Generate [Files] Entries</i> (Shift+Ctrl+I) menu item to the <i>Tools</i> menu to design and insert extra entries to the <tt>[Files]</tt> section at the cursor position, or to a new section.</li>
  <li>The <i>Generate MsgBox/TaskDialogMsgBox Call</i> tool (previously named <i>MsgBox/TaskDialogMsgBox Designer</i>) now respects the tab width and tab character settings, indents the generated Pascal script one extra level, and warns if the cursor position is not in the [Code] section.</li>
  <li>Minor theme color tweaks such as a different background color for the selected text.</li>
</ul>
<p><span class="head2">Support for logging improved</span></p>
<ul>
  <li>Added new <tt>[Run]</tt> and <tt>[UninstallRun]</tt> section flag <tt>logoutput</tt>. Instructs Setup and Uninstall to log the output of the executed program or batch file. Cannot be combined with the <tt>nowait</tt>, <tt>runasoriginaluser</tt>, <tt>shellexec</tt>, and <tt>waituntilidle</tt> flags. Has no effect if logging is not enabled.</li>
  <li>Added new <tt>[Setup]</tt> section directive <tt>UninstallLogging</tt>, which defaults to <tt>no</tt>. If set to <tt>yes</tt>, the uninstaller will always create a log file if it is launched from the <i>Add/Remove Programs</i> Control Panel applet. Equivalent to passing /LOG on the command line.</li>
  <li>Digital signing change: Sign Tool output is now always logged in the Compiler IDE's "Compiler Output" view, making it easier to debug issues. Because of this, sign tools that are console programs will now always run hidden, as their output is being captured and they would display nothing in their window.</li>
  <li>Pascal Scripting change: Added new <tt>ExecAndLogOutput</tt> support function. Can be used to log the output of the executed program or batch file to Setup and Uninstall's log, or to receive the output line by line in your own <tt>[Code]</tt> function, for example to read the first non-empty line from the output as shown in the help file and the new <i>PowerShell.iss</i> example script.</li>
  <li>ISPP changes:
    <ul>
    <li>Output of programs or batch files executed using the <tt>Exec</tt> support function is now always logged in the Compiler IDE's "Compiler Output" view.</li>
    <li>Added new support function <tt>ExecAndGetFirstLine</tt> to execute a program or batch file and read the first non-empty line from its output which can then be placed or used in the script as shown in the new <i>PowerShell.iss</i> example script.</li>
    </ul>
    </li>
</ul>
<p><span class="head2">Other changes</span></p>
<ul>
  <li>Console-mode compiler (ISCC) change: Added support for Unicode output.</li>
  <li>Added new <tt>[Files]</tt> section flag <tt>signcheck</tt>. Instructs the compiler to check the original source files for a digital signature before storing them.</li>
  <li>During startup Setup would always ask Windows to create any missing <tt>{usercf}</tt>, <tt>{userpf}</tt>, and <tt>{usersavedgames}</tt> folders. It no longer does until the script asks for the folder. Note that scripts running in administrative install mode should not do this because it violates the <a href="ishelp/index.php?topic=setup_useduserareaswarning">used user areas warning</a>.</li>
  <li>Changes to further help protect against potential DLL preloading attacks.</li>
  <li>Added support for IIS group users identifiers (<tt>iisiusrs</tt>) for use in <tt>Permissions</tt> parameters.</li>
  <li>ISPP changes:
    <ul>
    <li>Added support function <tt>AddQuotes</tt> to add a quote character to the left and right sides of a string if the string contains a space and it didn't have quotes already.</li>
    <li>Support function <tt>Exec</tt> no longer requires the filename parameter to be quoted if it contains spaces. Additionally it now supports &quot;&gt;&quot; as a filename and now includes special platform-independent support for .bat and .cmd files, both just like for example the <tt>[Run]</tt> section.</li>
    </ul>
  </li>  
  <li>Pascal Scripting changes: 
    <ul>
    <li>Added support functions <tt>UTF8Encode</tt> and <tt>UTF8Decode</tt> to encode a Unicode string into a UTF-8 encoded ANSI string and vice versa.</li>
    <li>Added support functions <tt>LoadStringFromLockedFile</tt> and <tt>LoadStringsFromLockedFile</tt> to read strings from a file even if it's already opened for writing by another program.</li>
    <li>Added support class <tt>TNewLinkLabel</tt> which can display multi-line text with embedded links and internally uses a Windows SysLink control. See the <i>CodeClasses.iss</i> example script for examples.</li>
    <li><tt>TWizardForm</tt>: Added new <tt>AdjustLinkLabelHeight</tt> function.</li>
    <li><tt>TDownloadPage</tt>: Added new <tt>ShowBaseNameInsteadOfUrl</tt> property.</li>
    <li>It is now possible to write <tt>var S: set of AnsiChar; begin S := ['a', 'b']; end;</tt>. In previous versions this would result in a type mismatch error.</tt>
    <li>It is now possible to write <tt>Stream.ReadBuffer(S, Length(S));</tt> when S is of type <tt>AnsiString</tt>. In previous versions this would compile but not work at run time. Same applies to <tt>Read</tt>, <tt>Write</tt>, and <tt>WriteBuffer</tt>: all four functions now accept any type of string.</li>
    <li>Added example which downloads and unzips a Zip file to the <i>CodeAutomation.iss</i> example script.</li>
    <li>Type <tt>TShellFolderID</tt> was removed because it wasn't used by any support function.</li>
    </ul>
  </li>
  <li>Improved the icons used by the <i>Select Language</i> dialog and the <i>Select Destination Location</i>, <i>Select Start Menu Folder</i>, and <i>Preparing to Install</i> wizard pages at 150% DPI and at 200% DPI.</li>
  <li>Added modern icons to the MyProg example executables, now compiled with Visual Studio 2022.</li>
  <li>Added official Korean translation.</li>
  <li>Inno Setup is now built using Delphi 11.3 Alexandria instead of Delphi 10.3 Rio.</li>
  <li>Inno Setup's Delphi projects have been recreated as new clean projects and have been added to a <i>Projects\Projects.groupproj</i> project group. This makes it a lot easier to get started with working with the Inno Setup source code and making contributions, even with the free Delphi Community Edition.</li>
  <li>Minor tweaks and documentation improvements.</li>
</ul>

<p>Contributions via <a href="https://github.com/jrsoftware/issrc" target="_blank">GitHub</a>: Thanks to Achim Stuy, ser163, Jens Geyer, and Sergii Leonov for their contributions.</p>

<p><a href="files/is6.2-whatsnew.htm">Inno Setup 6.2 Revision History</a></p>

</body>
</html>
